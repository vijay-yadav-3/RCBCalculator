# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  schedule:
    # * is a special character in YAML so you have to quote this string
    # - cron:  1-55/12 11-18 * * *
    - cron:  1-55/10 11,12,13,16,17 * * *
    - cron:  30-55/10 15 * * *
    - cron:  1-35/10 18 * * *

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
#    - name: Install dependencies
      # run: |
        # python -m pip install --upgrade pip
        # if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Run Python Code
      env:
        RAPID_API_KEY: ${{ secrets.RAPID_API_KEY }}
      run: |
        python schedule_and_points_refresh.py $RAPID_API_KEY
    
    # - name: Create Release
      # id: create_release
      # uses: actions/create-release@v1
      # env:
        # GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
      # with:
        # tag_name: "latest"
        # release_name: "latest"
        # draft: false
        # prerelease: false

    - name: Get Release
      id: get_release_info
      uses: cardinalby/git-get-release-action@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
      with:
        releaseName: 'latest'
    
    - uses: xresloader/upload-to-github-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
      with:
        file: "*.json"
        release_id: ${{ steps.get_release_info.outputs.id }}
        # release_id: "latest"
        overwrite: true
        verbose: true
